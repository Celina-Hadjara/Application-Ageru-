
import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.sql.Statement;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Hadjara Celina
 */
public class Accueil extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Accueil() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    public static void main(String args[]) throws SQLException {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgeruPlus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgeruPlus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgeruPlus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgeruPlus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Accueil().setVisible(true);
        });
    }

    Accueil(String id) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrTypeAnnonce = new javax.swing.ButtonGroup();
        GrEtatAnnonce = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Catégorie2 = new javax.swing.JComboBox<>();
        Catégorie = new javax.swing.JComboBox<>();
        jRadioButton6 = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        Catégorie3 = new javax.swing.JComboBox<>();
        Username = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableResultats = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setBackground(new java.awt.Color(255, 255, 255));
        label1.setFont(new java.awt.Font("Viner Hand ITC", 0, 36)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 102, 102));
        label1.setText("Ageru");

        jToggleButton1.setBackground(new java.awt.Color(240, 223, 186));
        jToggleButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jToggleButton1.setText("Don");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setBackground(new java.awt.Color(240, 223, 186));
        jToggleButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jToggleButton2.setText("Demande");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 102, 102));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Créer une annonce");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(254, 250, 250));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Catégorie d'annonce");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Disponibilité");

        GrTypeAnnonce.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton1.setText("Nourriture");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        GrTypeAnnonce.add(jRadioButton2);
        jRadioButton2.setText("Hébergement");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        GrTypeAnnonce.add(jRadioButton3);
        jRadioButton3.setText("Objet");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        GrEtatAnnonce.add(jRadioButton5);
        jRadioButton5.setActionCommand("Libre");
        jRadioButton5.setLabel("Libre");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jFormattedTextField2.setText("75016");
        jFormattedTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Code Postal");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Type d'annonce");

        Catégorie2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Offre", "Demande" }));
        Catégorie2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Catégorie2ActionPerformed(evt);
            }
        });

        Catégorie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vêtements", "Accessoires de mode", "Chaussures", "Livres, films et musique", "Hygiène & Beauté ", "Cuisine & Maison ", "Meubles", "Art & Déco", "Pour Bébé", "Electroménager", "Bricolage & Jardin", "Eléctronique", "Jeux & Jouets", "Sport & Loisirs", "Le monde des animaux", "Fourniture de bureau", " " }));
        Catégorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CatégorieActionPerformed(evt);
            }
        });

        GrEtatAnnonce.add(jRadioButton6);
        jRadioButton6.setText("Réservé");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        jButton3.setText("Rechercher");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Rechercher");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        Catégorie3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Offre", "Demande" }));
        Catégorie3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Catégorie3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jRadioButton6)
                        .addComponent(jRadioButton5)
                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3)
                        .addComponent(jRadioButton1)
                        .addComponent(jLabel4)
                        .addComponent(Catégorie2, 0, 196, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jRadioButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(Catégorie, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jFormattedTextField2)
                        .addComponent(Catégorie3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jRadioButton2))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Catégorie2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Catégorie3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton3)
                    .addComponent(Catégorie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jRadioButton5.getAccessibleContext().setAccessibleDescription("");
        jFormattedTextField2.getAccessibleContext().setAccessibleName("Paris,France");
        jFormattedTextField2.getAccessibleContext().setAccessibleDescription("");

        Username.setText("Mon Profil");
        Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameActionPerformed(evt);
            }
        });

        tableResultats.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableResultats);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 38, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        try {
            connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWD);
            // créer une requête
            statement = connection.createStatement();
            // exécuter une requête select * from clients
            String requete = "select utilisateur.Nom, utilisateur.Prenom, Demande.Etat_Annonce, Demande.TitreD, Demande.Code_Postal, Demande.Description_ from utilisateur inner join demande on Utilisateur_No = Demande.Ref_Utilisateur;";
            resultSet = statement.executeQuery(requete);
            // définir une table model (importer le type si nécessaire)
            DefaultTableModel tableModel = new DefaultTableModel();
            // définir une variable de type metadata
            ResultSetMetaData meta = (ResultSetMetaData) resultSet.getMetaData();
            // compter le nombre de colonnes pour connaitre les attributs de la table
            int numberOfColumns = meta.getColumnCount();
            // déclarer un tableau de chaine de caractère pour stocker les noms des attributs
            Object[] attributs = new String[numberOfColumns + 1];
            for (int column = 0; column < numberOfColumns; column++) {
                // pour chaque colonne, récupérer le nom de l'attribut et le mettre dans le tableau des attributs
                attributs[column] = meta.getColumnName(column + 1);
            }
            // mettre à jour les noms des colonnes dans la table model
            tableModel.setColumnIdentifiers(attributs);
            //parcourir ligne par ligne et récupérer les données de chaque colonne
            while (resultSet.next()) {
                Object[] rowData = new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    //getObject retourne la i+1 ème ligne des résultats
                    rowData[i] = resultSet.getObject(i + 1);
                }
                //rajouter la ligne récupéré à la table de model
                tableModel.addRow(rowData);
            }
            // une fois que toutes les lignes et colonnes des résultats ont été récupérées,
            // les mettre dans la table des résultats
            tableResultats.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(Interface1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        try {
            connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWD);
            // créer une requête
            statement = connection.createStatement();
            // exécuter une requête select * from clients
            String requete = "select utilisateur.Nom, utilisateur.Prenom, Offre.Etat_Annonce, Offre.TitreD, Offre.Code_Postal, Offre.Description_ from utilisateur inner join Offre on Utilisateur_No = Offre.Ref_Utilisateur;";
            resultSet = statement.executeQuery(requete);
            // définir une table model (importer le type si nécessaire)
            DefaultTableModel tableModel = new DefaultTableModel();
            // définir une variable de type metadata
            ResultSetMetaData meta = (ResultSetMetaData) resultSet.getMetaData();
            // compter le nombre de colonnes pour connaitre les attributs de la table
            int numberOfColumns = meta.getColumnCount();
            // déclarer un tableau de chaine de caractère pour stocker les noms des attributs
            Object[] attributs = new String[numberOfColumns + 1];
            for (int column = 0; column < numberOfColumns; column++) {
                // pour chaque colonne, récupérer le nom de l'attribut et le mettre dans le tableau des attributs
                attributs[column] = meta.getColumnName(column + 1);
            }
            // mettre à jour les noms des colonnes dans la table model
            tableModel.setColumnIdentifiers(attributs);
            //parcourir ligne par ligne et récupérer les données de chaque colonne
            while (resultSet.next()) {
                Object[] rowData = new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    //getObject retourne la i+1 ème ligne des résultats
                    rowData[i] = resultSet.getObject(i + 1);
                }
                //rajouter la ligne récupéré à la table de model
                tableModel.addRow(rowData);
            }
            // une fois que toutes les lignes et colonnes des résultats ont été récupérées,
            // les mettre dans la table des résultats
            tableResultats.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(Interface1.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new CréerAnnonce().setVisible(true);
        // nez Objet(resultset.getString(),  ,  ,  )


        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWD);
            // créer une requête
            statement = connection.createStatement();
            // exécuter une requête select * from clients
            String requete = "select utilisateur.Nom, utilisateur.Prenom, " + Catégorie2.getSelectedItem() + ".Code_Postal ," + Catégorie2.getSelectedItem() + ".Etat_Annonce, " + Catégorie2.getSelectedItem() + ".TitreD, " + Catégorie2.getSelectedItem() + ".Description_ from utilisateur inner join " + Catégorie2.getSelectedItem() + " On Utilisateur.Utilisateur_No = " + Catégorie2.getSelectedItem() + ".Ref_Utilisateur Where " + Catégorie2.getSelectedItem() + ".Code_Postal = " + Integer.parseInt(jFormattedTextField2.getText());
            resultSet = statement.executeQuery(requete);
            // définir une table model (importer le type si nécessaire)
            DefaultTableModel tableModel = new DefaultTableModel();
            // définir une variable de type metadata
            ResultSetMetaData meta = (ResultSetMetaData) resultSet.getMetaData();
            // compter le nombre de colonnes pour connaitre les attributs de la table
            int numberOfColumns = meta.getColumnCount();
            // déclarer un tableau de chaine de caractère pour stocker les noms des attributs
            Object[] attributs = new String[numberOfColumns + 1];
            for (int column = 0; column < numberOfColumns; column++) {
                // pour chaque colonne, récupérer le nom de l'attribut et le mettre dans le tableau des attributs
                attributs[column] = meta.getColumnName(column + 1);
            }
            // mettre à jour les noms des colonnes dans la table model
            tableModel.setColumnIdentifiers(attributs);
            //parcourir ligne par ligne et récupérer les données de chaque colonne
            while (resultSet.next()) {
                Object[] rowData = new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    //getObject retourne la i+1 ème ligne des résultats
                    rowData[i] = resultSet.getObject(i + 1);
                }
                //rajouter la ligne récupéré à la table de model
                tableModel.addRow(rowData);
            }
            // une fois que toutes les lignes et colonnes des résultats ont été récupérées,
            // les mettre dans la table des résultats
            tableResultats.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(Interface1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void Catégorie2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Catégorie2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Catégorie2ActionPerformed

    private void CatégorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CatégorieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CatégorieActionPerformed

    private void UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameActionPerformed
        // TODO add your handling code here:
        new Profil().setVisible(true);
        // nez Objet(resultset.getString(),  ,  ,  )
        this.setVisible(false);
    }//GEN-LAST:event_UsernameActionPerformed

    private void jFormattedTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here: 
        String Annonce = "Libre";
        if (jRadioButton6.isSelected()) {
            Annonce = "Reserve";
        }
        if (jRadioButton5.isSelected()) {
            Annonce = "Libre";
        }

        String Categorie = "Demande";
        if (jRadioButton1.isSelected()) {
            Categorie = "Food";
        }
        if (jRadioButton2.isSelected()) {
            Categorie = "Hebergement";
        }
        try {
            connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWD);
            // créer une requête
            statement = connection.createStatement();
            // exécuter une requête select * from clients
            String requete;
            if (jRadioButton3.isSelected()) {
                requete = "select utilisateur.Nom, utilisateur.Prenom from utilisateur inner join (" + Catégorie3.getSelectedItem() + " inner join Objet on " + Catégorie3.getSelectedItem() + "." + Catégorie3.getSelectedItem() + "_No = Objet.Ref_" + Catégorie3.getSelectedItem() + " ) On Utilisateur.Utilisateur_No =" + Catégorie3.getSelectedItem() + ".Ref_Utilisateur Where Objet.Categorie = '" + Catégorie.getSelectedItem() + "' And " + Catégorie3.getSelectedItem() + ".Etat_Annonce = '" + Annonce + "';";
            } else {
                requete = "select utilisateur.Nom, utilisateur.Prenom from utilisateur inner join (" + Catégorie3.getSelectedItem() + " inner join " + Categorie + " on " + Catégorie3.getSelectedItem() + "." + Catégorie3.getSelectedItem() + "_No= " + Categorie + ".Ref_" + Catégorie3.getSelectedItem() + " ) On Utilisateur.Utilisateur_No=" + Catégorie3.getSelectedItem() + ".Ref_Utilisateur Where " + Catégorie3.getSelectedItem() + ".Etat_Annonce = '" + Annonce + "'; ";
            }
            resultSet = statement.executeQuery(requete);
            // définir une table model (importer le type si nécessaire)
            DefaultTableModel tableModel = new DefaultTableModel();
            // définir une variable de type metadata
            ResultSetMetaData meta = (ResultSetMetaData) resultSet.getMetaData();
            // compter le nombre de colonnes pour connaitre les attributs de la table
            int numberOfColumns = meta.getColumnCount();
            // déclarer un tableau de chaine de caractère pour stocker les noms des attributs
            Object[] attributs = new String[numberOfColumns + 1];
            for (int column = 0; column < numberOfColumns; column++) {
                // pour chaque colonne, récupérer le nom de l'attribut et le mettre dans le tableau des attributs
                attributs[column] = meta.getColumnName(column + 1);
            }
            // mettre à jour les noms des colonnes dans la table model
            tableModel.setColumnIdentifiers(attributs);
            //parcourir ligne par ligne et récupérer les données de chaque colonne
            while (resultSet.next()) {
                Object[] rowData = new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    //getObject retourne la i+1 ème ligne des résultats
                    rowData[i] = resultSet.getObject(i + 1);
                }
                //rajouter la ligne récupéré à la table de model
                tableModel.addRow(rowData);
            }
            // une fois que toutes les lignes et colonnes des résultats ont été récupérées,
            // les mettre dans la table des résultats
            tableResultats.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(Interface1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void Catégorie3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Catégorie3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Catégorie3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Catégorie;
    private javax.swing.JComboBox<String> Catégorie2;
    private javax.swing.JComboBox<String> Catégorie3;
    private javax.swing.ButtonGroup GrEtatAnnonce;
    private javax.swing.ButtonGroup GrTypeAnnonce;
    public static javax.swing.JButton Username;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private java.awt.Label label1;
    private javax.swing.JTable tableResultats;
    // End of variables declaration//GEN-END:variables
            
    static final String DB_URL = "jdbc:mysql://localhost:3306/Ageru?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";
    static final String DB_USER = "Celina";
    static final String DB_PASSWD = "Did you like1";
//déclarer la connexion qui est de type Connection importée de java.sql
    public static Connection connection = null;
    //déclarer une requête qui est de type Statement importée de java.sql
    public static Statement statement = null;
    //déclarer la variable qui contient les résultats qui est de type ResulltSet importée de java.sql
    public static ResultSet resultSet = null;
}
